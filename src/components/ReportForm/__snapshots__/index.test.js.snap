// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReportForm should match a snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReportForm
    date=""
    description=""
    handleGoBack={[Function]}
    handleOnChange={[Function]}
    handleOnSubmit={[Function]}
    location={Object {}}
    name=""
    reward=""
    routeId="lost"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="report-form"
>
        <h2
                className="report-form__heading"
        >
                lost
        </h2>
        <label
                className="report-form__label"
                htmlFor="name"
        >
                Item Name
        </label>
        <input
                className="report-form__input name"
                name="name"
                onChange={[Function]}
                placeholder="required"
                required={true}
                type="text"
                value=""
        />
        <label
                className="report-form__label"
                htmlFor="description"
        >
                Description
        </label>
        <textarea
                className="report-form__textarea"
                name="description"
                onChange={[Function]}
                placeholder="required"
                required={true}
                type="text"
                value=""
        />
        <label
                className="report-form__label"
                htmlFor="date"
        >
                Date
        </label>
        <input
                className="report-form__input"
                name="date"
                onChange={[Function]}
                placeholder="required"
                required={true}
                type="date"
                value=""
        />
        <label
                className="report-form__label"
                htmlFor="reward"
                style={
                        Object {
                                "display": "initial",
                              }
                }
        >
                Reward?
        </label>
        <input
                className="report-form__input"
                name="reward"
                onChange={[Function]}
                placeholder="$?"
                style={
                        Object {
                                "display": "initial",
                              }
                }
                type="text"
                value=""
        />
        <div
                className="report-form__nav"
        >
                <button
                        className="report-form__btn"
                        onClick={[Function]}
                >
                        Back
                </button>
                <Link
                        className="report-form__btn"
                        disabled={true}
                        replace={false}
                        to="/report/map"
                >
                        next
                </Link>
        </div>
</form>,
      "className": "report-form-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="report-form__heading"
>
            lost
</h2>,
          <label
            className="report-form__label"
            htmlFor="name"
>
            Item Name
</label>,
          <input
            className="report-form__input name"
            name="name"
            onChange={[Function]}
            placeholder="required"
            required={true}
            type="text"
            value=""
/>,
          <label
            className="report-form__label"
            htmlFor="description"
>
            Description
</label>,
          <textarea
            className="report-form__textarea"
            name="description"
            onChange={[Function]}
            placeholder="required"
            required={true}
            type="text"
            value=""
/>,
          <label
            className="report-form__label"
            htmlFor="date"
>
            Date
</label>,
          <input
            className="report-form__input"
            name="date"
            onChange={[Function]}
            placeholder="required"
            required={true}
            type="date"
            value=""
/>,
          <label
            className="report-form__label"
            htmlFor="reward"
            style={
                        Object {
                                    "display": "initial",
                                  }
            }
>
            Reward?
</label>,
          <input
            className="report-form__input"
            name="reward"
            onChange={[Function]}
            placeholder="$?"
            style={
                        Object {
                                    "display": "initial",
                                  }
            }
            type="text"
            value=""
/>,
          <div
            className="report-form__nav"
>
            <button
                        className="report-form__btn"
                        onClick={[Function]}
            >
                        Back
            </button>
            <Link
                        className="report-form__btn"
                        disabled={true}
                        replace={false}
                        to="/report/map"
            >
                        next
            </Link>
</div>,
        ],
        "className": "report-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "lost",
            "className": "report-form__heading",
          },
          "ref": null,
          "rendered": "lost",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Item Name",
            "className": "report-form__label",
            "htmlFor": "name",
          },
          "ref": null,
          "rendered": "Item Name",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__input name",
            "name": "name",
            "onChange": [Function],
            "placeholder": "required",
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Description",
            "className": "report-form__label",
            "htmlFor": "description",
          },
          "ref": null,
          "rendered": "Description",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__textarea",
            "name": "description",
            "onChange": [Function],
            "placeholder": "required",
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Date",
            "className": "report-form__label",
            "htmlFor": "date",
          },
          "ref": null,
          "rendered": "Date",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__input",
            "name": "date",
            "onChange": [Function],
            "placeholder": "required",
            "required": true,
            "type": "date",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reward?",
            "className": "report-form__label",
            "htmlFor": "reward",
            "style": Object {
              "display": "initial",
            },
          },
          "ref": null,
          "rendered": "Reward?",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__input",
            "name": "reward",
            "onChange": [Function],
            "placeholder": "$?",
            "style": Object {
              "display": "initial",
            },
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="report-form__btn"
                onClick={[Function]}
>
                Back
</button>,
              <Link
                className="report-form__btn"
                disabled={true}
                replace={false}
                to="/report/map"
>
                next
</Link>,
            ],
            "className": "report-form__nav",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Back",
                "className": "report-form__btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Back",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "next",
                "className": "report-form__btn",
                "disabled": true,
                "replace": false,
                "to": "/report/map",
              },
              "ref": null,
              "rendered": "next",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="report-form"
>
          <h2
                    className="report-form__heading"
          >
                    lost
          </h2>
          <label
                    className="report-form__label"
                    htmlFor="name"
          >
                    Item Name
          </label>
          <input
                    className="report-form__input name"
                    name="name"
                    onChange={[Function]}
                    placeholder="required"
                    required={true}
                    type="text"
                    value=""
          />
          <label
                    className="report-form__label"
                    htmlFor="description"
          >
                    Description
          </label>
          <textarea
                    className="report-form__textarea"
                    name="description"
                    onChange={[Function]}
                    placeholder="required"
                    required={true}
                    type="text"
                    value=""
          />
          <label
                    className="report-form__label"
                    htmlFor="date"
          >
                    Date
          </label>
          <input
                    className="report-form__input"
                    name="date"
                    onChange={[Function]}
                    placeholder="required"
                    required={true}
                    type="date"
                    value=""
          />
          <label
                    className="report-form__label"
                    htmlFor="reward"
                    style={
                              Object {
                                        "display": "initial",
                                      }
                    }
          >
                    Reward?
          </label>
          <input
                    className="report-form__input"
                    name="reward"
                    onChange={[Function]}
                    placeholder="$?"
                    style={
                              Object {
                                        "display": "initial",
                                      }
                    }
                    type="text"
                    value=""
          />
          <div
                    className="report-form__nav"
          >
                    <button
                              className="report-form__btn"
                              onClick={[Function]}
                    >
                              Back
                    </button>
                    <Link
                              className="report-form__btn"
                              disabled={true}
                              replace={false}
                              to="/report/map"
                    >
                              next
                    </Link>
          </div>
</form>,
        "className": "report-form-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="report-form__heading"
>
              lost
</h2>,
            <label
              className="report-form__label"
              htmlFor="name"
>
              Item Name
</label>,
            <input
              className="report-form__input name"
              name="name"
              onChange={[Function]}
              placeholder="required"
              required={true}
              type="text"
              value=""
/>,
            <label
              className="report-form__label"
              htmlFor="description"
>
              Description
</label>,
            <textarea
              className="report-form__textarea"
              name="description"
              onChange={[Function]}
              placeholder="required"
              required={true}
              type="text"
              value=""
/>,
            <label
              className="report-form__label"
              htmlFor="date"
>
              Date
</label>,
            <input
              className="report-form__input"
              name="date"
              onChange={[Function]}
              placeholder="required"
              required={true}
              type="date"
              value=""
/>,
            <label
              className="report-form__label"
              htmlFor="reward"
              style={
                            Object {
                                          "display": "initial",
                                        }
              }
>
              Reward?
</label>,
            <input
              className="report-form__input"
              name="reward"
              onChange={[Function]}
              placeholder="$?"
              style={
                            Object {
                                          "display": "initial",
                                        }
              }
              type="text"
              value=""
/>,
            <div
              className="report-form__nav"
>
              <button
                            className="report-form__btn"
                            onClick={[Function]}
              >
                            Back
              </button>
              <Link
                            className="report-form__btn"
                            disabled={true}
                            replace={false}
                            to="/report/map"
              >
                            next
              </Link>
</div>,
          ],
          "className": "report-form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "lost",
              "className": "report-form__heading",
            },
            "ref": null,
            "rendered": "lost",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Item Name",
              "className": "report-form__label",
              "htmlFor": "name",
            },
            "ref": null,
            "rendered": "Item Name",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__input name",
              "name": "name",
              "onChange": [Function],
              "placeholder": "required",
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description",
              "className": "report-form__label",
              "htmlFor": "description",
            },
            "ref": null,
            "rendered": "Description",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__textarea",
              "name": "description",
              "onChange": [Function],
              "placeholder": "required",
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Date",
              "className": "report-form__label",
              "htmlFor": "date",
            },
            "ref": null,
            "rendered": "Date",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__input",
              "name": "date",
              "onChange": [Function],
              "placeholder": "required",
              "required": true,
              "type": "date",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Reward?",
              "className": "report-form__label",
              "htmlFor": "reward",
              "style": Object {
                "display": "initial",
              },
            },
            "ref": null,
            "rendered": "Reward?",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__input",
              "name": "reward",
              "onChange": [Function],
              "placeholder": "$?",
              "style": Object {
                "display": "initial",
              },
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="report-form__btn"
                  onClick={[Function]}
>
                  Back
</button>,
                <Link
                  className="report-form__btn"
                  disabled={true}
                  replace={false}
                  to="/report/map"
>
                  next
</Link>,
              ],
              "className": "report-form__nav",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Back",
                  "className": "report-form__btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Back",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "next",
                  "className": "report-form__btn",
                  "disabled": true,
                  "replace": false,
                  "to": "/report/map",
                },
                "ref": null,
                "rendered": "next",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ReportForm should match a snapshot for a found item route 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReportForm
    date=""
    description=""
    handleGoBack={[Function]}
    handleOnChange={[Function]}
    handleOnSubmit={[Function]}
    location={Object {}}
    name=""
    reward=""
    routeId="found"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="report-form"
>
        <h2
                className="report-form__heading"
        >
                found
        </h2>
        <label
                className="report-form__label"
                htmlFor="name"
        >
                Item Name
        </label>
        <input
                className="report-form__input name"
                name="name"
                onChange={[Function]}
                placeholder="required"
                required={true}
                type="text"
                value=""
        />
        <label
                className="report-form__label"
                htmlFor="description"
        >
                Description
        </label>
        <textarea
                className="report-form__textarea"
                name="description"
                onChange={[Function]}
                placeholder="required"
                required={true}
                type="text"
                value=""
        />
        <label
                className="report-form__label"
                htmlFor="date"
        >
                Date
        </label>
        <input
                className="report-form__input"
                name="date"
                onChange={[Function]}
                placeholder="required"
                required={true}
                type="date"
                value=""
        />
        <label
                className="report-form__label"
                htmlFor="reward"
                style={
                        Object {
                                "display": "none",
                              }
                }
        >
                Reward?
        </label>
        <input
                className="report-form__input"
                name="reward"
                onChange={[Function]}
                placeholder="$?"
                style={
                        Object {
                                "display": "none",
                              }
                }
                type="text"
                value=""
        />
        <div
                className="report-form__nav"
        >
                <button
                        className="report-form__btn"
                        onClick={[Function]}
                >
                        Back
                </button>
                <Link
                        className="report-form__btn"
                        disabled={true}
                        replace={false}
                        to="/report/map"
                >
                        next
                </Link>
        </div>
</form>,
      "className": "report-form-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="report-form__heading"
>
            found
</h2>,
          <label
            className="report-form__label"
            htmlFor="name"
>
            Item Name
</label>,
          <input
            className="report-form__input name"
            name="name"
            onChange={[Function]}
            placeholder="required"
            required={true}
            type="text"
            value=""
/>,
          <label
            className="report-form__label"
            htmlFor="description"
>
            Description
</label>,
          <textarea
            className="report-form__textarea"
            name="description"
            onChange={[Function]}
            placeholder="required"
            required={true}
            type="text"
            value=""
/>,
          <label
            className="report-form__label"
            htmlFor="date"
>
            Date
</label>,
          <input
            className="report-form__input"
            name="date"
            onChange={[Function]}
            placeholder="required"
            required={true}
            type="date"
            value=""
/>,
          <label
            className="report-form__label"
            htmlFor="reward"
            style={
                        Object {
                                    "display": "none",
                                  }
            }
>
            Reward?
</label>,
          <input
            className="report-form__input"
            name="reward"
            onChange={[Function]}
            placeholder="$?"
            style={
                        Object {
                                    "display": "none",
                                  }
            }
            type="text"
            value=""
/>,
          <div
            className="report-form__nav"
>
            <button
                        className="report-form__btn"
                        onClick={[Function]}
            >
                        Back
            </button>
            <Link
                        className="report-form__btn"
                        disabled={true}
                        replace={false}
                        to="/report/map"
            >
                        next
            </Link>
</div>,
        ],
        "className": "report-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "found",
            "className": "report-form__heading",
          },
          "ref": null,
          "rendered": "found",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Item Name",
            "className": "report-form__label",
            "htmlFor": "name",
          },
          "ref": null,
          "rendered": "Item Name",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__input name",
            "name": "name",
            "onChange": [Function],
            "placeholder": "required",
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Description",
            "className": "report-form__label",
            "htmlFor": "description",
          },
          "ref": null,
          "rendered": "Description",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__textarea",
            "name": "description",
            "onChange": [Function],
            "placeholder": "required",
            "required": true,
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Date",
            "className": "report-form__label",
            "htmlFor": "date",
          },
          "ref": null,
          "rendered": "Date",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__input",
            "name": "date",
            "onChange": [Function],
            "placeholder": "required",
            "required": true,
            "type": "date",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Reward?",
            "className": "report-form__label",
            "htmlFor": "reward",
            "style": Object {
              "display": "none",
            },
          },
          "ref": null,
          "rendered": "Reward?",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "report-form__input",
            "name": "reward",
            "onChange": [Function],
            "placeholder": "$?",
            "style": Object {
              "display": "none",
            },
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="report-form__btn"
                onClick={[Function]}
>
                Back
</button>,
              <Link
                className="report-form__btn"
                disabled={true}
                replace={false}
                to="/report/map"
>
                next
</Link>,
            ],
            "className": "report-form__nav",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Back",
                "className": "report-form__btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Back",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "next",
                "className": "report-form__btn",
                "disabled": true,
                "replace": false,
                "to": "/report/map",
              },
              "ref": null,
              "rendered": "next",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="report-form"
>
          <h2
                    className="report-form__heading"
          >
                    found
          </h2>
          <label
                    className="report-form__label"
                    htmlFor="name"
          >
                    Item Name
          </label>
          <input
                    className="report-form__input name"
                    name="name"
                    onChange={[Function]}
                    placeholder="required"
                    required={true}
                    type="text"
                    value=""
          />
          <label
                    className="report-form__label"
                    htmlFor="description"
          >
                    Description
          </label>
          <textarea
                    className="report-form__textarea"
                    name="description"
                    onChange={[Function]}
                    placeholder="required"
                    required={true}
                    type="text"
                    value=""
          />
          <label
                    className="report-form__label"
                    htmlFor="date"
          >
                    Date
          </label>
          <input
                    className="report-form__input"
                    name="date"
                    onChange={[Function]}
                    placeholder="required"
                    required={true}
                    type="date"
                    value=""
          />
          <label
                    className="report-form__label"
                    htmlFor="reward"
                    style={
                              Object {
                                        "display": "none",
                                      }
                    }
          >
                    Reward?
          </label>
          <input
                    className="report-form__input"
                    name="reward"
                    onChange={[Function]}
                    placeholder="$?"
                    style={
                              Object {
                                        "display": "none",
                                      }
                    }
                    type="text"
                    value=""
          />
          <div
                    className="report-form__nav"
          >
                    <button
                              className="report-form__btn"
                              onClick={[Function]}
                    >
                              Back
                    </button>
                    <Link
                              className="report-form__btn"
                              disabled={true}
                              replace={false}
                              to="/report/map"
                    >
                              next
                    </Link>
          </div>
</form>,
        "className": "report-form-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="report-form__heading"
>
              found
</h2>,
            <label
              className="report-form__label"
              htmlFor="name"
>
              Item Name
</label>,
            <input
              className="report-form__input name"
              name="name"
              onChange={[Function]}
              placeholder="required"
              required={true}
              type="text"
              value=""
/>,
            <label
              className="report-form__label"
              htmlFor="description"
>
              Description
</label>,
            <textarea
              className="report-form__textarea"
              name="description"
              onChange={[Function]}
              placeholder="required"
              required={true}
              type="text"
              value=""
/>,
            <label
              className="report-form__label"
              htmlFor="date"
>
              Date
</label>,
            <input
              className="report-form__input"
              name="date"
              onChange={[Function]}
              placeholder="required"
              required={true}
              type="date"
              value=""
/>,
            <label
              className="report-form__label"
              htmlFor="reward"
              style={
                            Object {
                                          "display": "none",
                                        }
              }
>
              Reward?
</label>,
            <input
              className="report-form__input"
              name="reward"
              onChange={[Function]}
              placeholder="$?"
              style={
                            Object {
                                          "display": "none",
                                        }
              }
              type="text"
              value=""
/>,
            <div
              className="report-form__nav"
>
              <button
                            className="report-form__btn"
                            onClick={[Function]}
              >
                            Back
              </button>
              <Link
                            className="report-form__btn"
                            disabled={true}
                            replace={false}
                            to="/report/map"
              >
                            next
              </Link>
</div>,
          ],
          "className": "report-form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "found",
              "className": "report-form__heading",
            },
            "ref": null,
            "rendered": "found",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Item Name",
              "className": "report-form__label",
              "htmlFor": "name",
            },
            "ref": null,
            "rendered": "Item Name",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__input name",
              "name": "name",
              "onChange": [Function],
              "placeholder": "required",
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description",
              "className": "report-form__label",
              "htmlFor": "description",
            },
            "ref": null,
            "rendered": "Description",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__textarea",
              "name": "description",
              "onChange": [Function],
              "placeholder": "required",
              "required": true,
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Date",
              "className": "report-form__label",
              "htmlFor": "date",
            },
            "ref": null,
            "rendered": "Date",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__input",
              "name": "date",
              "onChange": [Function],
              "placeholder": "required",
              "required": true,
              "type": "date",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Reward?",
              "className": "report-form__label",
              "htmlFor": "reward",
              "style": Object {
                "display": "none",
              },
            },
            "ref": null,
            "rendered": "Reward?",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "report-form__input",
              "name": "reward",
              "onChange": [Function],
              "placeholder": "$?",
              "style": Object {
                "display": "none",
              },
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="report-form__btn"
                  onClick={[Function]}
>
                  Back
</button>,
                <Link
                  className="report-form__btn"
                  disabled={true}
                  replace={false}
                  to="/report/map"
>
                  next
</Link>,
              ],
              "className": "report-form__nav",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Back",
                  "className": "report-form__btn",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Back",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "next",
                  "className": "report-form__btn",
                  "disabled": true,
                  "replace": false,
                  "to": "/report/map",
                },
                "ref": null,
                "rendered": "next",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
